//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BudgetManager.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BudgetManagerDataEntities : DbContext
    {
        private static BudgetManagerDataEntities _context;

        public BudgetManagerDataEntities()
            : base("name=BudgetManagerDataEntities")
        {
        }

        public static BudgetManagerDataEntities GetContext()
        {
            if (_context == null) _context = new BudgetManagerDataEntities();
            return _context;
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ExpenseList> ExpenseList { get; set; }
        public virtual DbSet<HistoryOfOperations> HistoryOfOperations { get; set; }
        public virtual DbSet<IncomeList> IncomeList { get; set; }
    
        public virtual int spExpenseList(string nameOfExpense, ObjectParameter id)
        {
            var nameOfExpenseParameter = nameOfExpense != null ?
                new ObjectParameter("NameOfExpense", nameOfExpense) :
                new ObjectParameter("NameOfExpense", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spExpenseList", nameOfExpenseParameter, id);
        }
    
        public virtual int spHistoryOfOperations(string nameOfOperations, Nullable<decimal> valueToChange, string notes, Nullable<decimal> amountToChange, ObjectParameter id)
        {
            var nameOfOperationsParameter = nameOfOperations != null ?
                new ObjectParameter("NameOfOperations", nameOfOperations) :
                new ObjectParameter("NameOfOperations", typeof(string));
    
            var valueToChangeParameter = valueToChange.HasValue ?
                new ObjectParameter("ValueToChange", valueToChange) :
                new ObjectParameter("ValueToChange", typeof(decimal));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var amountToChangeParameter = amountToChange.HasValue ?
                new ObjectParameter("AmountToChange", amountToChange) :
                new ObjectParameter("AmountToChange", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spHistoryOfOperations", nameOfOperationsParameter, valueToChangeParameter, notesParameter, amountToChangeParameter, id);
        }
    
        public virtual int spIncomeList(string nameOfIncome, ObjectParameter id)
        {
            var nameOfIncomeParameter = nameOfIncome != null ?
                new ObjectParameter("NameOfIncome", nameOfIncome) :
                new ObjectParameter("NameOfIncome", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIncomeList", nameOfIncomeParameter, id);
        }
    }
}
